# use Alt + q as tmux prefix
unbind C-b
set -g prefix M-q

# use 1 as starting index for windows
set -g base-index 1

# Enabling mouse
set -g mouse on

# Enabling vim key binding
set -g mode-keys vi

# Clipboard
set -g @yank_selection_mouse 'clipboard'

resurrect_dir="~/.local/share/tmux/resurrect"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugins Configurations
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-dir $resurrect_dir
set -g @resurrect-hook-post-save-all 'sed -i "s/\/tmp.*nvim/nvim/" $resurrect_dir/last'
set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-restore 'on'
set -g @dracula-show-powerline true
set -g @dracula-show-left-icon session
set -g @dracula-plugins "git"
set -g @dracula-show-timezone false
set -g @dracula-git-disable-status true
set -g @dracula-git-no-repo-message "Not a git repo!"

# Shell Commands
bind-key -r C run-shell "tmux neww ~/tmux-chsh.sh"
bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/Documents/builds/gomoment"
bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/.config/nvim"
bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/.local/share/nvim/sessions"
bind-key -r F run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r B run-shell "~/.local/bin/tmux-sessionizer ~/Documents/builds"

# Nvim & Tmux Navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Use Alt + d to kill pane
# Not using this for now
# bind-key -n M-d kill-pane

# split pane with respect to current path
bind l split-window -h -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"

# Pick Window or Session
bind-key w choose-window

# Create a new window with respect to current path
bind c new-window -c "#{pane_current_path}"

# Press v to start selecting text to copy
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Press y to copy
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Use mouse highlight to copy text
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x
unbind -T copy-mode-vi MouseDragEnd1Pane

# Make current window index 1
bind-key t swap-window -t 1

# Switch to the last window
bind-key ] last-window

# use Prefix + r to reload tmux config
unbind r
bind r source-file ~/.tmux.conf

# Toggle status bar
bind-key b set-option status

run '~/.tmux/plugins/tpm/tpm'
